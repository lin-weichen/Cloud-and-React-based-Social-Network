{"version":3,"sources":["assets/images/logo.svg","assets/images/blue-marker.svg","components/TopBar.js","constants.js","components/Register.js","components/Login.js","components/Gallery.js","components/CreatePostForm.js","components/CreatePostButton.js","components/AroundMarker.js","components/AroundMap.js","components/Home.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","className","src","logo","alt","this","props","isLoggedIn","onClick","handleLogout","type","Component","TOKEN_KEY","API_ROOT","GEO_OPTIONS","enableHighAccuracy","maximumAge","timeout","POST_TYPE_VIDEO","POST_TYPE_UNKNOWN","RegistrationForm","state","confirmDirty","autoCompleteResult","handleConfirmBlur","e","value","target","setState","compareToFirstPassword","rule","callback","form","getFieldValue","validateToNextPassword","validateFields","force","handleSubmit","preventDefault","err","values","console","log","fetch","method","body","JSON","stringify","username","password","then","response","ok","text","Error","statusText","data","message","success","catch","error","getFieldDecorator","tailFormItemLayout","wrapperCol","xs","span","offset","sm","labelCol","onSubmit","Item","label","rules","required","hasFeedback","validator","Password","onBlur","htmlType","Link","to","Register","Form","create","name","NormalLoginForm","stateText","handleLoginSucceed","prefix","style","color","placeholder","Login","Gallery","images","map","image","customOverlay","user","caption","backdropClosesModal","enableImageSelection","NormalCreatePostForm","normFile","Array","isArray","fileList","beforeUpload","formItemLayout","valuePropName","getValueFromEvent","Dragger","React","CreatePostForm","CreatePostButton","visible","confirmLoading","showModal","handleOk","token","localStorage","getItem","parse","lat","lon","formData","FormData","set","originFileObj","headers","Authorization","loadNearbyPosts","resetFields","handleCancel","getFormRef","formInstance","title","onOk","okText","onCancel","ref","AroundMarker","isOpen","handleToggle","prevState","post","url","location","isImagePost","customIcon","undefined","blueMarkerUrl","scaledSize","window","google","maps","Size","position","lng","onMouseOver","onMouseOut","icon","controls","NormalAroundMap","getMapRef","mapInstance","reloadMarker","center","getCenter","radius","getRadius","loadPostsByTopic","bounds","getBounds","ne","getNorthEast","right","LatLng","geometry","spherical","computeDistanceBetween","defaultZoom","defaultCenter","onDragEnd","onZoomChanged","posts","key","AroundMap","withScriptjs","withGoogleMap","TabPane","Tabs","Home","isLoadingGeoLocation","isLoadingPosts","onSuccessLoadGeoLocation","coords","latitude","longitude","setItem","onFailedLoadGeoLocation","json","handleTopicChange","topic","loadFacesAroundTheWorld","navigator","geolocation","getCurrentPosition","filter","thumbnail","thumbnailWidth","thumbnailHeight","gutter","includes","tip","length","renderImagePosts","renderVideoPosts","operations","Group","onChange","tabBarExtraContent","tab","renderPosts","googleMapURL","loadingElement","height","containerElement","mapElement","Main","getLogin","Redirect","getHome","Switch","Route","path","render","component","App","Boolean","removeItem","hostname","match","ReactDOM","BrowserRouter","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76d8f289.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-marker.bc8cc4ea.svg\";","import React, { Component } from \"react\";\nimport { Icon } from \"antd\";\nimport logo from \"../assets/images/logo.svg\";\n\nclass TopBar extends Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <img src={logo} alt=\"logo\" className=\"App-logo\" />\n        <span className=\"App-title\">Around</span>\n        {this.props.isLoggedIn ? (\n          <a className=\"logout\" onClick={this.props.handleLogout}>\n            <Icon type=\"logout\" /> Logout\n          </a>\n        ) : null}\n      </header>\n    );\n  }\n}\n\nexport default TopBar;\n","export const TOKEN_KEY = \"TOKEN_KEY\";\nexport const API_ROOT = \"https://social-plus-287400.wn.r.appspot.com\";\n\nexport const GEO_OPTIONS = {\n  enableHighAccuracy: true,\n  maximumAge: 300000,\n  timeout: 27000,\n};\nexport const POS_KEY = \"POS_KEY\";\nexport const AUTH_HEADER = \"Bearer\";\n\nexport const POST_TYPE_IMAGE = \"image\";\nexport const POST_TYPE_VIDEO = \"video\";\nexport const POST_TYPE_UNKNOWN = \"unknown\";\n\nexport const LOC_SHAKE = 0.02;\nexport const TOPIC_AROUND = \"around\";\nexport const TOPIC_FACE = \"face\";\n","import React, { Component } from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { API_ROOT } from \"../constants\";\n\nclass RegistrationForm extends Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  handleConfirmBlur = (e) => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        fetch(`${API_ROOT}/signup`, {\n          method: \"POST\",\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password,\n          }),\n        })\n          .then((response) => {\n            if (response.ok) {\n              return response.text();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((data) => {\n            console.log(\"===== \", data);\n            message.success(\"Registration succeed!\");\n          })\n          .catch((err) => {\n            console.error(err);\n            message.error(\"Registration failed.\");\n          });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    return (\n      <Form\n        {...formItemLayout}\n        onSubmit={this.handleSubmit}\n        className=\"register\"\n      >\n        <Form.Item label=\"Username\">\n          {getFieldDecorator(\"username\", {\n            rules: [{ required: true, message: \"Please input your username!\" }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please confirm your password!\",\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n          <p>\n            I already have an account, go back to <Link to=\"/login\">login</Link>\n          </p>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const Register = Form.create({ name: \"register\" })(RegistrationForm);\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { API_ROOT } from \"../constants\";\n\nclass NormalLoginForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        fetch(`${API_ROOT}/login`, {\n          method: \"POST\",\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password,\n          }),\n        })\n          .then((response) => {\n            if (response.ok) {\n              return response.text();\n            }\n            throw new Error(response.stateText);\n          })\n          .then((data) => {\n            console.log(data);\n            this.props.handleLoginSucceed(data);\n            message.success(\"Login Success\");\n          })\n          .catch((err) => {\n            console.error(err);\n            message.error(\"Login failed.\");\n          });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator(\"username\", {\n            rules: [{ required: true, message: \"Please input your username!\" }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n          Or <Link to=\"/register\">register now!</Link>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst Login = Form.create({ name: \"normal_login\" })(NormalLoginForm);\nexport default Login;\n","import React, { Component } from \"react\";\nimport GridGallery from \"react-grid-gallery\";\nimport PropTypes from \"prop-types\";\n\nclass Gallery extends Component {\n  static propTypes = {\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        user: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n        caption: PropTypes.string,\n        thumbnailWidth: PropTypes.number.isRequired,\n        thumbnailHeight: PropTypes.number.isRequired,\n      })\n    ).isRequired,\n  };\n\n  render() {\n    const images = this.props.images.map((image) => {\n      return {\n        ...image,\n        customOverlay: (\n          <div className=\"gallery-thumbnail\">\n            <div>{`${image.user}: ${image.caption}`}</div>\n          </div>\n        ),\n      };\n    });\n\n    return (\n      <div className=\"gallery\">\n        <GridGallery\n          backdropClosesModal\n          images={images}\n          enableImageSelection={false}\n        />\n      </div>\n    );\n  }\n}\nexport default Gallery;\n","import React from \"react\";\nimport { Form, Input, Upload, Icon } from \"antd\";\n\nclass NormalCreatePostForm extends React.Component {\n  normFile = (e) => {\n    console.log(\"Upload event:\", e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  beforeUpload = () => false;\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Form {...formItemLayout}>\n        <Form.Item label=\"Message\">\n          {getFieldDecorator(\"message\", {\n            rules: [{ required: true, message: \"Please input message.\" }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Image/Video\">\n          <div className=\"dropbox\">\n            {getFieldDecorator(\"image\", {\n              valuePropName: \"fileList\",\n              getValueFromEvent: this.normFile,\n              rules: [{ required: true, message: \"Please select an image.\" }],\n            })(\n              <Upload.Dragger name=\"files\" beforeUpload={this.beforeUpload}>\n                <p className=\"ant-upload-drag-icon\">\n                  <Icon type=\"inbox\" />\n                </p>\n                <p className=\"ant-upload-text\">\n                  Click or drag file to this area to upload\n                </p>\n                <p className=\"ant-upload-hint\">\n                  Support for a single or bulk upload.\n                </p>\n              </Upload.Dragger>\n            )}\n          </div>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst CreatePostForm = Form.create()(NormalCreatePostForm);\nexport default CreatePostForm;\n","import React, { Component } from \"react\";\nimport { Modal, Button, message } from \"antd\";\nimport { API_ROOT, AUTH_HEADER, TOKEN_KEY, POS_KEY } from \"../constants\";\nimport CreatePostForm from \"./CreatePostForm\";\n\nclass CreatePostButton extends Component {\n  state = {\n    visible: false,\n    confirmLoading: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    console.log(\"ok\");\n    this.form.validateFields((err, values) => {\n      console.log(values);\n      if (!err) {\n        const token = localStorage.getItem(TOKEN_KEY);\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n\n        const formData = new FormData();\n        formData.set(\"lat\", lat);\n        formData.set(\"lon\", lon);\n        formData.set(\"message\", values.message);\n        formData.set(\"image\", values.image[0].originFileObj);\n\n        this.setState({ confirmLoading: true });\n        fetch(`${API_ROOT}/post`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `${AUTH_HEADER} ${token}`,\n          },\n          body: formData,\n        })\n          .then((response) => {\n            if (response.ok) {\n              return this.props.loadNearbyPosts();\n            }\n            throw new Error(\"Failed to create post.\");\n          })\n          .then(() => {\n            this.setState({ visible: false, confirmLoading: false });\n            this.form.resetFields();\n            message.success(\"Post created successfully!\");\n          })\n          .catch((e) => {\n            console.error(e);\n            message.error(\"Failed to create post.\");\n            this.setState({ confirmLoading: false });\n          });\n      }\n    });\n  };\n\n  handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    this.setState({\n      visible: false,\n    });\n  };\n\n  getFormRef = (formInstance) => {\n    this.form = formInstance;\n  };\n\n  render() {\n    const { visible, confirmLoading } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Create New Post\n        </Button>\n        <Modal\n          title=\"Create New Post\"\n          visible={visible}\n          onOk={this.handleOk}\n          okText=\"Create\"\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          <CreatePostForm ref={this.getFormRef} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CreatePostButton;\n","import React from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\nimport PropTypes from \"prop-types\";\n\nimport blueMarkerUrl from \"../assets/images/blue-marker.svg\";\n\nclass AroundMarker extends React.Component {\n  static propTypes = {\n    post: PropTypes.object.isRequired,\n  };\n\n  state = {\n    isOpen: false,\n  };\n\n  handleToggle = () => {\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\n  };\n\n  render() {\n    const { user, message, url, location, type } = this.props.post;\n    const { lat, lon } = location;\n\n    const isImagePost = type === \"image\";\n    const customIcon = isImagePost\n      ? undefined\n      : {\n          url: blueMarkerUrl,\n          scaledSize: new window.google.maps.Size(26, 41),\n        };\n\n    return (\n      <Marker\n        position={{ lat, lng: lon }}\n        onMouseOver={isImagePost ? this.handleToggle : undefined}\n        onMouseOut={isImagePost ? this.handleToggle : undefined}\n        onClick={isImagePost ? undefined : this.handleToggle}\n        icon={customIcon}\n      >\n        {this.state.isOpen ? (\n          <InfoWindow>\n            <div>\n              {isImagePost ? (\n                <img src={url} alt={message} className=\"around-marker-image\" />\n              ) : (\n                <video src={url} controls className=\"around-marker-video\" />\n              )}\n              <p>{`${user}: ${message}`}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </Marker>\n    );\n  }\n}\n\nexport default AroundMarker;\n","import React, { Component } from \"react\";\nimport { POS_KEY } from \"../constants\";\n\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\n\nimport AroundMarker from \"./AroundMarker\";\n\nclass NormalAroundMap extends Component {\n  getMapRef = (mapInstance) => {\n    this.map = mapInstance;\n    window.map = mapInstance;\n  };\n\n  reloadMarker = () => {\n    const center = this.getCenter();\n    const radius = this.getRadius();\n    this.props.loadPostsByTopic(center, radius);\n  };\n\n  getCenter() {\n    const center = this.map.getCenter();\n    return { lat: center.lat(), lon: center.lng() };\n  }\n\n  getRadius() {\n    const center = this.map.getCenter();\n    const bounds = this.map.getBounds();\n    if (center && bounds) {\n      const ne = bounds.getNorthEast();\n      const right = new window.google.maps.LatLng(center.lat(), ne.lng());\n      return (\n        0.001 *\n        window.google.maps.geometry.spherical.computeDistanceBetween(\n          center,\n          right\n        )\n      );\n    }\n  }\n\n  render() {\n    const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n    return (\n      <GoogleMap\n        ref={this.getMapRef}\n        defaultZoom={11}\n        defaultCenter={{ lat, lng: lon }}\n        onDragEnd={this.reloadMarker}\n        onZoomChanged={this.reloadMarker}\n      >\n        {this.props.posts.map((post) => (\n          <AroundMarker post={post} key={post.url} />\n        ))}\n      </GoogleMap>\n    );\n  }\n}\n\nconst AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));\nexport default AroundMap;\n","import React from \"react\";\nimport { Tabs, Spin, Row, Col, Radio } from \"antd\";\nimport {\n  GEO_OPTIONS,\n  POS_KEY,\n  API_ROOT,\n  AUTH_HEADER,\n  TOKEN_KEY,\n  POST_TYPE_IMAGE,\n  POST_TYPE_VIDEO,\n  POST_TYPE_UNKNOWN,\n  TOPIC_AROUND,\n  TOPIC_FACE,\n} from \"../constants\";\n\nimport Gallery from \"./Gallery\";\nimport CreatePostButton from \"./CreatePostButton\";\nimport AroundMap from \"./AroundMap\";\n\nconst { TabPane } = Tabs;\n\nclass Home extends React.Component {\n  state = {\n    isLoadingGeoLocation: false,\n    isLoadingPosts: false,\n    error: \"\",\n    posts: [],\n  };\n\n  // When the component is rendered to the DOM for the first time\n  // such as at page load we call the Geolocation API to determine\n  // a latitude and longitude for the browser\n  componentDidMount() {\n    console.log(navigator.geolocation);\n    if (\"geolocation\" in navigator) {\n      this.setState({ isLoadingGeoLocation: true, error: \"\" });\n      navigator.geolocation.getCurrentPosition(\n        this.onSuccessLoadGeoLocation,\n        this.onFailedLoadGeoLocation,\n        GEO_OPTIONS\n      );\n    } else {\n      this.setState({ error: \"Geolocation is not supported.\" });\n    }\n  }\n\n  onSuccessLoadGeoLocation = (position) => {\n    console.log(position);\n    const { latitude, longitude } = position.coords;\n    localStorage.setItem(\n      POS_KEY,\n      JSON.stringify({ lat: latitude, lon: longitude })\n    );\n    this.setState({ isLoadingGeoLocation: false, error: \"\" });\n    this.loadNearbyPosts();\n  };\n\n  onFailedLoadGeoLocation = () => {\n    this.setState({\n      isLoadingGeoLocation: false,\n      error: \"Failed to load geo location.\",\n    });\n  };\n\n  loadNearbyPosts = () => {\n    const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n    //const { lat, lon } = { lat: \"37\", lon: \"-120\" };\n    // for user: abcd password: 1234\n    const token = localStorage.getItem(TOKEN_KEY);\n    this.setState({ isLoadingPosts: true, error: \"\" });\n    return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=20000`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `${AUTH_HEADER} ${token}`,\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Failed to load post.\");\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ posts: data ? data : [], isLoadingPosts: false });\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState({ isLoadingPosts: false, error: e.message });\n      });\n  };\n\n  renderImagePosts() {\n    const { posts } = this.state;\n    const images = posts\n      .filter((post) => post.type === POST_TYPE_IMAGE)\n      .map((post) => {\n        return {\n          user: post.user,\n          src: post.url,\n          thumbnail: post.url,\n          caption: post.message,\n          thumbnailWidth: 400,\n          thumbnailHeight: 300,\n        };\n      });\n    return <Gallery images={images} />;\n  }\n\n  renderVideoPosts() {\n    const { posts } = this.state;\n    return (\n      <Row gutter={30}>\n        {posts\n          .filter((post) =>\n            [POST_TYPE_VIDEO, POST_TYPE_UNKNOWN].includes(post.type)\n          )\n          .map((post) => (\n            <Col span={6} key={post.url}>\n              <video src={post.url} controls={true} className=\"video-block\" />\n              <p>\n                {post.user}: {post.message}\n              </p>\n            </Col>\n          ))}\n      </Row>\n    );\n  }\n\n  renderPosts(type) {\n    const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\n    if (error) {\n      return error;\n    } else if (isLoadingGeoLocation) {\n      return <Spin tip=\"Loading geo location...\" />;\n    } else if (isLoadingPosts) {\n      return <Spin tip=\"Loading posts...\" />;\n    } else if (posts.length > 0) {\n      return type === POST_TYPE_IMAGE\n        ? this.renderImagePosts()\n        : this.renderVideoPosts();\n    } else {\n      return \"No nearby posts\";\n    }\n  }\n\n  handleTopicChange = (e) => {\n    const topic = e.target.value;\n    this.setState({ topic });\n    if (topic === TOPIC_AROUND) {\n      this.loadNearbyPosts();\n    } else {\n      this.loadFacesAroundTheWorld();\n    }\n  };\n\n  loadFacesAroundTheWorld = () => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    this.setState({ isLoadingPosts: true, error: \"\" });\n    return fetch(`${API_ROOT}/cluster?term=face`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `${AUTH_HEADER} ${token}`,\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Failed to load posts\");\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ posts: data ? data : [], isLoadingPosts: false });\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState({ isLoadingPosts: false, error: e.message });\n      });\n  };\n\n  loadPostsByTopic = (center, radius) => {\n    if (this.state.topic === TOPIC_AROUND) {\n      return this.loadNearbyPosts(center, radius);\n    } else {\n      return this.loadFacesAroundTheWorld();\n    }\n  };\n\n  render() {\n    const operations = (\n      <CreatePostButton loadNearbyPosts={this.loadPostsByTopic} />\n    );\n\n    return (\n      <div>\n        <Radio.Group onChange={this.handleTopicChange} value={this.state.topic}>\n          <Radio value={TOPIC_AROUND}>Posts Around Me</Radio>\n          <Radio value={TOPIC_FACE}>Faces Around The World</Radio>\n        </Radio.Group>\n        <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n          <TabPane tab=\"Image Posts\" key=\"1\">\n            {this.renderPosts(POST_TYPE_IMAGE)}\n          </TabPane>\n          <TabPane tab=\"Video Posts\" key=\"2\">\n            {this.renderPosts(POST_TYPE_VIDEO)}\n          </TabPane>\n          <TabPane tab=\"Map\" key=\"3\">\n            <AroundMap\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `600px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              posts={this.state.posts}\n              loadPostsByTopic={this.loadPostsByTopic}\n            />\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { Register } from \"./Register\";\nimport Login from \"./Login\";\nimport Home from \"./Home\";\n\nclass Main extends Component {\n  getLogin = () => {\n    return this.props.isLoggedIn ? (\n      <Redirect to=\"/home\" />\n    ) : (\n      <Login handleLoginSucceed={this.props.handleLoginSucceed} />\n    );\n  };\n\n  getHome = () => {\n    return this.props.isLoggedIn ? <Home /> : <Redirect to=\"/login\" />;\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <Switch>\n          <Route path=\"/login\" render={this.getLogin} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/home\" render={this.getHome} />\n\n          <Route render={this.getLogin} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport TopBar from \"./TopBar\";\nimport Main from \"./Main\";\nimport \"../styles/App.css\";\n\nimport { TOKEN_KEY } from \"../constants\";\n\nclass App extends Component {\n  state = {\n    isLoggedIn: Boolean(localStorage.getItem(TOKEN_KEY)),\n  };\n\n  handleLoginSucceed = (token) => {\n    localStorage.setItem(TOKEN_KEY, token);\n    this.setState({ isLoggedIn: true });\n  };\n\n  handleLogout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    this.setState({ isLoggedIn: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar\n          handleLogout={this.handleLogout}\n          isLoggedIn={this.state.isLoggedIn}\n        />\n\n        <Main\n          handleLoginSucceed={this.handleLoginSucceed}\n          isLoggedIn={this.state.isLoggedIn}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}